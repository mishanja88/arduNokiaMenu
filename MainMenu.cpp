#include "MainMenu.h"

#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>
#include "SystemState.h"
#include "LcdUtil.h"
#include "MenuStack.h"

extern Adafruit_PCD8544 display;

#define D_W 84
#define D_H 48
#define HEADER_H 10
#define VOL_W 7
#define VOL_H 29


#define MENU0_HEIGHT 48
#define MENU0_WIDTH 84
static const unsigned char PROGMEM menu0_bmp[] = {
  B10000000, B00100000, B00001000, B00000011, B10000001, B00000000, B01000000, B00001101, B00000000, B00000000, B00010000,
  B11000111, B00010001, B10001100, B01110010, B00011001, B10001110, B01001000, B10001101, B01111111, B11111111, B11010000,
  B11000111, B00010001, B10001100, B01110010, B00011001, B10001110, B01001000, B10001101, B01000000, B00000000, B01000000,
  B11000111, B00010001, B10001100, B01111110, B00111111, B10001111, B11001000, B10011101, B01000000, B00000000, B01000000,
  B11000111, B00010001, B10001100, B01111110, B00111111, B10001111, B11111000, B11111101, B01000000, B00000000, B01000000,
  B11000111, B00010001, B10001100, B01111110, B00111111, B10001111, B11111000, B11111101, B01000000, B00000000, B01000000,
  B11000110, B00010001, B10001100, B01110010, B00011111, B10001110, B01111000, B11111101, B01000000, B00000000, B01000000,
  B11000000, B01110000, B00111100, B00000011, B10000001, B10000000, B01111000, B11111101, B01111111, B11111111, B11010000,
  B11000000, B01110000, B00111100, B00000011, B10000001, B10000000, B01111000, B11111101, B00000000, B00000000, B00010000,
  B11000111, B11110000, B00111100, B01100011, B11111000, B10001100, B01111000, B11111101, B11111111, B11111111, B11110000,
  B11000111, B11110001, B00011100, B01111111, B11111000, B10001111, B11111000, B11111101, B11100011, B11111110, B11110000,
  B11000111, B11110001, B00011100, B01111111, B11111000, B10001111, B11111000, B11111101, B11010101, B11111100, B10110000,
  B11000111, B11110001, B10001100, B01111111, B11111000, B10001111, B11111000, B11111101, B11000001, B11110000, B11010000,
  B11000111, B11110001, B10000100, B01111010, B01110001, B10001111, B01111000, B11111101, B11010101, B11110000, B11010000,
  B11000111, B11110001, B10000100, B01110010, B01110001, B10001110, B01111000, B11111101, B11000001, B11111100, B10110000,
  B10000001, B11100000, B01000100, B00000010, B00000011, B10000000, B01100000, B00111101, B11100011, B11111110, B11110000,
  B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111101, B11111111, B11111111, B11110000,
  B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111101, B10000000, B11110000, B00010000,
  B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111101, B01111111, B01101111, B11100000,
  B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111101, B01111111, B01101111, B11100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01111111, B01101111, B11100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01111111, B01101111, B11100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01111111, B01101111, B11100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101111, B11100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101111, B11100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101111, B11100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101111, B11100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101111, B11100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101111, B11100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101111, B11100000,
  B11000000, B00111111, B10011111, B11000000, B00111100, B00000011, B11111001, B11111101, B01000001, B01101111, B11100000,
  B11000000, B00111111, B10011111, B11000000, B00111100, B00000011, B11111001, B11111101, B01000001, B01101111, B11100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101000, B00100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101000, B00100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101000, B00100000,
  B11111001, B11111100, B00000011, B11111001, B11111111, B10011111, B11000000, B00111101, B01000001, B01101000, B00100000,
  B11111001, B11111100, B00000011, B11111001, B11111111, B10011111, B11000000, B00111101, B01000001, B01101000, B00100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101000, B00100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101000, B00100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101000, B00100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101000, B00100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101000, B00100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101000, B00100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101000, B00100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101000, B00100000,
  B11111001, B11111111, B10011111, B11111001, B11111111, B10011111, B11111001, B11111101, B01000001, B01101000, B00100000,
  B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111101, B01000001, B01101000, B00100000,
  B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111101, B10000000, B11110000, B00010000,
};

void MainMenu::paint() const
{
  if (g_Sys.event.dirtyWidgets == 0xFF)
  {
    // miniature bitmap display
    display.clearDisplay();
    display.drawBitmap(0, 0, menu0_bmp, MENU0_WIDTH, MENU0_HEIGHT, 0, 1);
  }

  if (g_Sys.event.dirtyWidgets & wMenuBtn)
  {
    //   display.setCursor(40, D_W - 30);
    //   printProgmem(PSTR("Menu"));
  }

  for (int offset = 0; offset <= 11; offset += 11)
    if (g_Sys.event.dirtyWidgets & (offset ? wMicVol : wMainVol))
    {
      display.fillRect(D_W - VOL_W - 1 - offset, D_H - VOL_H - 1, VOL_W, VOL_H, WHITE);

      int fixedVol = (offset ? g_Sys.eq.micVolume : g_Sys.eq.headVolume) * VOL_H / 256;
      display.fillRect(D_W - VOL_W - offset, D_H - 1 - fixedVol, VOL_W - 2, fixedVol, BLACK);
    }

  if (g_Sys.event.dirtyWidgets & wMicVol)
  {
    // printProgmem(PSTR("wMicVol"));
  }

  if (g_Sys.event.dirtyWidgets & wBattery)
  {
    // printProgmem(PSTR("Bat"));
  }

  if (g_Sys.event.dirtyWidgets & wPresetName)
  {
    // printProgmem(PSTR("Preset name"));
  }

  /* for (int i = 0; i < 3; ++i)
     if (g_Sys.event.dirtyWidgets & (1 << i))
     {
       display.setCursor(i << 3, 20);
       display.println(i);
     }
  */
  //else
  // display.println("done");
}

const MenuTreeItem* MainMenu::processEvents() const
{
  if (g_Sys.event.diffVol)
    g_Sys.event.dirtyWidgets |= wMainVol;

  return BaseMenu::processEvents();
}
